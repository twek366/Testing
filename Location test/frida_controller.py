import frida
import sys
import time
from enum import Enum


class LocationMode(Enum):
    GPS = "GPS"
    GSM = "GSM"
    DISABLED = "DISABLED"


def on_message(message, data):
    print(f"[Frida] {message}")


def main():
    try:
        device = frida.get_usb_device()
        print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É: {device.name}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return

    try:
        try:
            session = device.attach("net.torganik.gps_guide_app")
            print("‚ö° –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –∑–∞–ø—É—â–µ–Ω–Ω–æ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É")
        except frida.ProcessNotFoundError:
            pid = device.spawn(["net.torganik.gps_guide_app"])
            session = device.attach(pid)
            device.resume(pid)
            time.sleep(1)
            print("‚ö° –ü—Ä–æ—Ü–µ—Å—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")

        with open("location_manager.js", "r", encoding="utf-8") as f:
            script = session.create_script(f.read())

        script.on("message", on_message)
        script.load()
        print("‚úÖ –°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")

        def update_coords(lat, lng):
            try:
                script.exports_sync.setcoordinates(lat, lng)
                print("‚úì –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: {str(e)}")

        def update_mode(mode):
            try:
                script.exports_sync.setmode(mode.value)
                print(f"‚úì –†–µ–∂–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω: {mode.name}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞: {str(e)}")

        def update_accuracy(accuracy):
            try:
                script.exports_sync.setaccuracy(accuracy)
                print(f"‚úì –¢–æ—á–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {accuracy} –º")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏: {str(e)}")

        print("""\n–ö–æ–º–∞–Ω–¥—ã:
  gps       - –†–µ–∂–∏–º –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏ (GPS, 5–º)
  gsm       - –†–µ–∂–∏–º —Å–µ—Ç–∏ (GSM, 500–º)
  off       - –û—Ç–∫–ª—é—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
  set lat,lng - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: 59.934280,30.335099)
  acc –º–µ—Ç—Ä—ã - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ—á–Ω–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: acc 200)
  exit      - –í—ã—Ö–æ–¥\n""")

        while True:
            cmd = input("> ").strip().lower()

            if cmd == "exit":
                break

            elif cmd == "gps":
                update_mode(LocationMode.GPS)
                update_accuracy(5.0)

            elif cmd == "gsm":
                update_mode(LocationMode.GSM)
                update_accuracy(500.0)

            elif cmd == "off":
                update_mode(LocationMode.DISABLED)

            elif cmd.startswith("set "):
                try:
                    parts = cmd[4:].replace(" ", "").split(",")
                    lat, lng = map(float, parts)
                    update_coords(lat, lng)
                except:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: set 59.934280,30.335099")

            elif cmd.startswith("acc "):
                try:
                    accuracy = float(cmd[4:])
                    update_accuracy(accuracy)
                except:
                    print("‚ùå –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: acc 150)")

            else:
                print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")

    except Exception as e:
        print(f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
    finally:
        if 'session' in locals():
            session.detach()
        print("üëã –†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


if __name__ == "__main__":
    main()